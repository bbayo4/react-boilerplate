// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the State Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <State />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          SOME STATE EXAMPLES...
        </h1>,
        <br />,
        <section>
          <p>
            the counter is 
            0
          </p>
          <p>
            <button
              onClick={[Function]}
            >
              +
            </button>
            <button
              onClick={[Function]}
            >
              -
            </button>
          </p>
        </section>,
        <section>
          <p>
            the color is 
            <span
              style={
                Object {
                  "background": "white",
                }
              }
            >
              white
            </span>
          </p>
          <p>
            <select
              onChange={[Function]}
            >
              <option>
                white
              </option>
              <option>
                red
              </option>
              <option>
                orange
              </option>
              <option>
                yellow
              </option>
              <option>
                green
              </option>
              <option>
                blue
              </option>
              <option>
                purple
              </option>
            </select>
          </p>
        </section>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "SOME STATE EXAMPLES...",
        },
        "ref": null,
        "rendered": "SOME STATE EXAMPLES...",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              the counter is 
              0
            </p>,
            <p>
              <button
                onClick={[Function]}
              >
                +
              </button>
              <button
                onClick={[Function]}
              >
                -
              </button>
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "the counter is ",
                0,
              ],
            },
            "ref": null,
            "rendered": Array [
              "the counter is ",
              0,
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  onClick={[Function]}
                >
                  +
                </button>,
                <button
                  onClick={[Function]}
                >
                  -
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "+",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "+",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "-",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "-",
                "type": "button",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              the color is 
              <span
                style={
                  Object {
                    "background": "white",
                  }
                }
              >
                white
              </span>
            </p>,
            <p>
              <select
                onChange={[Function]}
              >
                <option>
                  white
                </option>
                <option>
                  red
                </option>
                <option>
                  orange
                </option>
                <option>
                  yellow
                </option>
                <option>
                  green
                </option>
                <option>
                  blue
                </option>
                <option>
                  purple
                </option>
              </select>
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "the color is ",
                <span
                  style={
                    Object {
                      "background": "white",
                    }
                  }
                >
                  white
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "the color is ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "white",
                  "style": Object {
                    "background": "white",
                  },
                },
                "ref": null,
                "rendered": "white",
                "type": "span",
              },
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                onChange={[Function]}
              >
                <option>
                  white
                </option>
                <option>
                  red
                </option>
                <option>
                  orange
                </option>
                <option>
                  yellow
                </option>
                <option>
                  green
                </option>
                <option>
                  blue
                </option>
                <option>
                  purple
                </option>
              </select>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    white
                  </option>,
                  <option>
                    red
                  </option>,
                  <option>
                    orange
                  </option>,
                  <option>
                    yellow
                  </option>,
                  <option>
                    green
                  </option>,
                  <option>
                    blue
                  </option>,
                  <option>
                    purple
                  </option>,
                ],
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "white",
                  },
                  "ref": null,
                  "rendered": "white",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "red",
                  },
                  "ref": null,
                  "rendered": "red",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "orange",
                  },
                  "ref": null,
                  "rendered": "orange",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "yellow",
                  },
                  "ref": null,
                  "rendered": "yellow",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "green",
                  },
                  "ref": null,
                  "rendered": "green",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "blue",
                  },
                  "ref": null,
                  "rendered": "blue",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "purple",
                  },
                  "ref": null,
                  "rendered": "purple",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "p",
          },
        ],
        "type": "section",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            SOME STATE EXAMPLES...
          </h1>,
          <br />,
          <section>
            <p>
              the counter is 
              0
            </p>
            <p>
              <button
                onClick={[Function]}
              >
                +
              </button>
              <button
                onClick={[Function]}
              >
                -
              </button>
            </p>
          </section>,
          <section>
            <p>
              the color is 
              <span
                style={
                  Object {
                    "background": "white",
                  }
                }
              >
                white
              </span>
            </p>
            <p>
              <select
                onChange={[Function]}
              >
                <option>
                  white
                </option>
                <option>
                  red
                </option>
                <option>
                  orange
                </option>
                <option>
                  yellow
                </option>
                <option>
                  green
                </option>
                <option>
                  blue
                </option>
                <option>
                  purple
                </option>
              </select>
            </p>
          </section>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SOME STATE EXAMPLES...",
          },
          "ref": null,
          "rendered": "SOME STATE EXAMPLES...",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                the counter is 
                0
              </p>,
              <p>
                <button
                  onClick={[Function]}
                >
                  +
                </button>
                <button
                  onClick={[Function]}
                >
                  -
                </button>
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "the counter is ",
                  0,
                ],
              },
              "ref": null,
              "rendered": Array [
                "the counter is ",
                0,
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    onClick={[Function]}
                  >
                    +
                  </button>,
                  <button
                    onClick={[Function]}
                  >
                    -
                  </button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "+",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "+",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "-",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "-",
                  "type": "button",
                },
              ],
              "type": "p",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                the color is 
                <span
                  style={
                    Object {
                      "background": "white",
                    }
                  }
                >
                  white
                </span>
              </p>,
              <p>
                <select
                  onChange={[Function]}
                >
                  <option>
                    white
                  </option>
                  <option>
                    red
                  </option>
                  <option>
                    orange
                  </option>
                  <option>
                    yellow
                  </option>
                  <option>
                    green
                  </option>
                  <option>
                    blue
                  </option>
                  <option>
                    purple
                  </option>
                </select>
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "the color is ",
                  <span
                    style={
                      Object {
                        "background": "white",
                      }
                    }
                  >
                    white
                  </span>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "the color is ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "white",
                    "style": Object {
                      "background": "white",
                    },
                  },
                  "ref": null,
                  "rendered": "white",
                  "type": "span",
                },
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  onChange={[Function]}
                >
                  <option>
                    white
                  </option>
                  <option>
                    red
                  </option>
                  <option>
                    orange
                  </option>
                  <option>
                    yellow
                  </option>
                  <option>
                    green
                  </option>
                  <option>
                    blue
                  </option>
                  <option>
                    purple
                  </option>
                </select>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      white
                    </option>,
                    <option>
                      red
                    </option>,
                    <option>
                      orange
                    </option>,
                    <option>
                      yellow
                    </option>,
                    <option>
                      green
                    </option>,
                    <option>
                      blue
                    </option>,
                    <option>
                      purple
                    </option>,
                  ],
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "white",
                    },
                    "ref": null,
                    "rendered": "white",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "red",
                    },
                    "ref": null,
                    "rendered": "red",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "orange",
                    },
                    "ref": null,
                    "rendered": "orange",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "yellow",
                    },
                    "ref": null,
                    "rendered": "yellow",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "green",
                    },
                    "ref": null,
                    "rendered": "green",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "blue",
                    },
                    "ref": null,
                    "rendered": "blue",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "purple",
                    },
                    "ref": null,
                    "rendered": "purple",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "p",
            },
          ],
          "type": "section",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
