// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The App Component should load the Lifecycles Component when the lifecycles button is clicked 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        >
          <Lifecycles />
        </div>,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Lifecycles />,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          >
            <Lifecycles />
          </div>,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Lifecycles />,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`The App Component should load the Media Component when the media button is clicked 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        >
          <Media />
        </div>,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Media />,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          >
            <Media />
          </div>,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Media />,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`The App Component should load the Props Component when the props button is clicked 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        >
          <Props
            comp={<Spinner />}
            func={[Function]}
            list={
              Array [
                "Apples",
                "Oranges",
                "Pears",
                "Limes",
                "Grapes",
              ]
            }
            text="some text was set to me via props!"
          />
        </div>,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Props
            comp={<Spinner />}
            func={[Function]}
            list={
              Array [
                "Apples",
                "Oranges",
                "Pears",
                "Limes",
                "Grapes",
              ]
            }
            text="some text was set to me via props!"
          />,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "comp": <Spinner />,
            "func": [Function],
            "list": Array [
              "Apples",
              "Oranges",
              "Pears",
              "Limes",
              "Grapes",
            ],
            "text": "some text was set to me via props!",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          >
            <Props
              comp={<Spinner />}
              func={[Function]}
              list={
                Array [
                  "Apples",
                  "Oranges",
                  "Pears",
                  "Limes",
                  "Grapes",
                ]
              }
              text="some text was set to me via props!"
            />
          </div>,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Props
              comp={<Spinner />}
              func={[Function]}
              list={
                Array [
                  "Apples",
                  "Oranges",
                  "Pears",
                  "Limes",
                  "Grapes",
                ]
              }
              text="some text was set to me via props!"
            />,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "comp": <Spinner />,
              "func": [Function],
              "list": Array [
                "Apples",
                "Oranges",
                "Pears",
                "Limes",
                "Grapes",
              ],
              "text": "some text was set to me via props!",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`The App Component should load the State Component when the state button is clicked 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        >
          <State />
        </div>,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <State />,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          >
            <State />
          </div>,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <State />,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`The App Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        />,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          />,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`The App Component should unload any loaded Component when the clear button is clicked 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app-header"
        >
          <img
            alt="logo"
            className="app-logo"
            src="test-file-stub"
          />
          <h1
            className="app-title"
          >
            Welcome to React!
          </h1>
        </header>,
        <div
          className="components-wrapper"
        />,
        <div
          className="control-buttons"
        >
          <button
            onClick={[Function]}
          >
            Props
          </button>
          <button
            onClick={[Function]}
          >
            State
          </button>
          <button
            onClick={[Function]}
          >
            Lifecycles
          </button>
          <button
            onClick={[Function]}
          >
            Media
          </button>
          <button
            onClick={[Function]}
          >
            Clear
          </button>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />,
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "app-logo",
              "src": "test-file-stub",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React!",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Welcome to React!",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "components-wrapper",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
            >
              Props
            </button>,
            <button
              onClick={[Function]}
            >
              State
            </button>,
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>,
            <button
              onClick={[Function]}
            >
              Media
            </button>,
            <button
              onClick={[Function]}
            >
              Clear
            </button>,
          ],
          "className": "control-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Props",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Props",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "State",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "State",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lifecycles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Lifecycles",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app-header"
          >
            <img
              alt="logo"
              className="app-logo"
              src="test-file-stub"
            />
            <h1
              className="app-title"
            >
              Welcome to React!
            </h1>
          </header>,
          <div
            className="components-wrapper"
          />,
          <div
            className="control-buttons"
          >
            <button
              onClick={[Function]}
            >
              Props
            </button>
            <button
              onClick={[Function]}
            >
              State
            </button>
            <button
              onClick={[Function]}
            >
              Lifecycles
            </button>
            <button
              onClick={[Function]}
            >
              Media
            </button>
            <button
              onClick={[Function]}
            >
              Clear
            </button>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="app-logo"
                src="test-file-stub"
              />,
              <h1
                className="app-title"
              >
                Welcome to React!
              </h1>,
            ],
            "className": "app-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "app-logo",
                "src": "test-file-stub",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React!",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "Welcome to React!",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "components-wrapper",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
              >
                Props
              </button>,
              <button
                onClick={[Function]}
              >
                State
              </button>,
              <button
                onClick={[Function]}
              >
                Lifecycles
              </button>,
              <button
                onClick={[Function]}
              >
                Media
              </button>,
              <button
                onClick={[Function]}
              >
                Clear
              </button>,
            ],
            "className": "control-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Props",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Props",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "State",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "State",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lifecycles",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Lifecycles",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Clear",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Clear",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
